---
import { getCollection, getEntry } from 'astro:content';
import BaseLayout from "@layouts/BaseLayout.astro";
import FacetHeader from "@components/FacetHeader.astro";
import CollectionGrid from "@components/CollectionGrid.astro";
import Pagination from "@components/Pagination.astro";

// Generate a new path for every collection entry
export async function getStaticPaths({ paginate }) {
  const facetEntries = await getCollection('facets');
  const facetCategories = [];
  const pageSize = 12;

  facetEntries.forEach((facet) => {
    if (facet.data['facet-categories']) {
      facet.data['facet-categories'].forEach((entry) => {
        facetCategories.push({
          params: { facet: facet.id, category: entry.id }, props: { entry, facet },
        });
      });
    }
  });

  return facetCategories.flatMap((entry) => {
    const facet = entry.props.facet.id;
    const category = entry.props.entry.id;
    return paginate(entry.props.entry.entries, {
      params: { facet, category },
      pageSize: pageSize
    });
  });
}

const { facet, category, page } = Astro.props;
const params = Astro.params;

const facetEntry = await getEntry('facets', params.facet);

let categoryEntry;
if (facetEntry.data['facet-categories']) {
  facetEntry.data['facet-categories'].forEach((entry) => {
    if (entry.id === params.category) {
      categoryEntry = entry;
    }
  });
}

const title = categoryEntry.title;
const facetCategories = facetEntry.data['facet-categories'];
const results = page.data;
const prevLink = page.currentPage === 2 ? `/facets/${facetEntry.id}/${categoryEntry.id}` : page.url.prev;

const nextLink = page.url.next;
---
<BaseLayout title={title}>
  <div class="filter">
    <FacetHeader facet={facetEntry} facetCategories={facetCategories} currentFacetCategory={categoryEntry} />
    <CollectionGrid contentType="maps" columns={3} identifiers={results} />
    <Pagination start={page.start + 1} end={page.end + 1} total={page.total} prevLink={prevLink} nextLink={nextLink} />
  </div>
</BaseLayout>
